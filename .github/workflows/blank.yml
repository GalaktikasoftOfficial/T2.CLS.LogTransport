name: .NET

on:
  push:
    branches: 
    - develop
    - master
    
  pull_request:
    branches: 
    - master
    
  workflow_dispatch:

jobs:
  build:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
   
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.405
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.8
      with:
        versionSpec: '5.6.4'
    
    - name: Display GitVersion config
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.8
    
    - name: Display varibles
      run: |
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
        echo "Branch Name: ${{ steps.gitversion.outputs.branchName }}"
        echo "Master Branch: ${{ contains(steps.gitversion.outputs.branchName, 'master') }}"
        echo "Not Master Branch: ${{ !contains(steps.gitversion.outputs.branchName, 'master') }}"
        
    - name: 'Dotnet NuGet Add Source'
      run: dotnet nuget update source github --source https://nuget.pkg.github.com/GalaktikasoftOfficial/index.json  --store-password-in-clear-text  --username GalaktikasoftOfficial --password ${{secrets.GITHUB_TOKEN}}
      shell: pwsh
    
    - name: Restore dependencies
      run: dotnet restore ./Source/T2.CLS.LogTransport.sln
    
    - name: Build T2.CLS.LogTransport
      run: dotnet publish ./Source/T2.CLS.LogTransport/T2.CLS.LogTransport/T2.CLS.LogTransport.csproj --configuration Release  --framework  netcoreapp3.1 --disable-parallel --self-contained true --runtime win-x64  -o ./bin/Release/
     
    - name: Create Zip
      uses: papeloto/action-zip@v1
      with:
        files: ./bin/Release
        dest: T2.CLS.LogTransport.win-x64.${{ steps.gitversion.outputs.semVer }}.zip
        
#    - name: Show Files
#      run: ls -R
          
    - name: Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with: 
        name: T2.CLS.LogTransport.win-x64.${{ steps.gitversion.outputs.semVer }}.zip
        path: T2.CLS.LogTransport.win-x64.${{ steps.gitversion.outputs.semVer }}.zip
                    
          
          
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.gitversion.outputs.semVer }}
        release_name: Build  ${{ steps.gitversion.outputs.semVer }}
        draft: false
        prerelease: ${{ !contains(steps.gitversion.outputs.branchName, 'master') }}
             
    - name: Upload Release Asset T2.CLS.Core
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: T2.CLS.LogTransport.win-x64.${{ steps.gitversion.outputs.semVer }}.zip
        asset_name: T2.CLS.LogTransport.win-x64.${{ steps.gitversion.outputs.semVer }}.zip
        asset_content_type: application/zip 
